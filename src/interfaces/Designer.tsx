// Generated by https://quicktype.io

export interface Designer {
    Data:      Data;
    IsSuccess: boolean;
    Message:   null;
    Status:    number;
}

export type SimplifiedDesigner = {
    Data: {
        screen: {
            actionSets: Record<string, any>;
            events: Record<string, any>;
            controls: any;
        };
    };
};
export interface Data {
    screen:      Screen;
    versionList: VersionList;
}

export interface Screen {
    actionSets:                   ActionSets;
    AppRef:                       string;
    appRibbonType:                number;
    comments:                     string;
    controls:                     Control[];
    createdBy:                    string;
    draftVersion:                 string;
    draftVersionCount:            number;
    draftVersionLastModifiedDate: Date;
    draftVersionNumber:           number;
    events:                       { [key: string]: string[] };
    fields:                       Field[];
    focusControl:                 string;
    id:                           string;
    isDeveloper:                  boolean;
    isScreenlet:                  boolean;
    isShared:                     boolean;
    layout:                       Layout;
    layoutHTML:                   string;
    modifiedBy:                   string;
    name:                         string;
    onActiveRecordChange:         null;
    onFocus:                      null;
    onLoad:                       null;
    operationMode:                number;
    ScreenLastModifiedDate:       Date;
    screenMode:                   string;
    Type:                         string;
    versionId:                    string;
    VersionLastModifyDate:        Date;
    versionNumber:                number;
    versionTarget:                number;
    viewFilter:                   null;
    viewFriendlyName:             string;
}

export interface ActionSets {
    "14468a5c-8ade-4ca6-8962-e96e6b784fd3": The14468_A5C8_Ade4_Ca68962_E96E6B784Fd3;
    "b9330125-37a3-499c-a0bd-6a7983c638f1": The14468_A5C8_Ade4_Ca68962_E96E6B784Fd3;
    "a5504326-6d81-4c98-b80d-0b2dd8b8194c": A55043266D814C98B80D0B2Dd8B8194C;
    "af345967-8104-4f39-bdff-0b6831176a0d": The14468_A5C8_Ade4_Ca68962_E96E6B784Fd3;
}

export interface The14468_A5C8_Ade4_Ca68962_E96E6B784Fd3 {
    Name:         string;
    ActionSetId:  string;
    Key:          string;
    Scope:        number;
    Actions:      The14468A5C8Ade4Ca68962E96E6B784Fd3Action[];
    Notes:        string;
    IsInAppStore: boolean;
}

export interface The14468A5C8Ade4Ca68962E96E6B784Fd3Action {
    Type:                string;
    ScreenId:            string;
    ActiveRecordId:      ActiveRecordID | null;
    ReplaceHistory:      boolean;
    RefreshOnTransition: boolean;
    RefreshCurrent:      boolean;
    OpenIn:              number | null;
    Params:              Param[];
    Notes:               string;
    ActionId:            number;
    Disabled:            boolean;
    InValid:             boolean;
    ValidationMessages:  any[];
    Metadata:            null;
}

export interface ActiveRecordID {
    ValueType:         number;
    Value:             number | string;
    Property:          null | string;
    ChildProperty:     null;
    ValidationMessage: null;
    FontStyles:        null;
}

export interface Param {
    Key:   null;
    Value: DefaultValue;
}

export interface DefaultValue {
    ValueType:         number;
    Value:             null | string;
    Property:          null | string;
    ChildProperty:     null;
    ValidationMessage: null | string;
    FontStyles:        null;
}

export interface A55043266D814C98B80D0B2Dd8B8194C {
    Name:         string;
    ActionSetId:  string;
    Key:          string;
    Scope:        number;
    Actions:      A55043266D814C98B80D0B2Dd8B8194CAction[];
    Notes:        string;
    IsInAppStore: boolean;
}

export interface A55043266D814C98B80D0B2Dd8B8194CAction {
    Type:                    string;
    AssignValueToActions?:   AssignValueToAction[];
    IgnoreLogging?:          boolean;
    IsAppRoutineInputValue?: boolean;
    Notes:                   string;
    ActionId:                number;
    Disabled:                boolean;
    InValid:                 boolean;
    ValidationMessages:      any[];
    Metadata:                null;
    ExpressionList?:         Expression[];
    ActionSetOnTrue?:        The14468_A5C8_Ade4_Ca68962_E96E6B784Fd3;
    ActionSetOnFalse?:       The14468_A5C8_Ade4_Ca68962_E96E6B784Fd3;
}

export interface AssignValueToAction {
    Source:             DefaultValue;
    ActionResultId:     string;
    IsSharedResult:     boolean;
    ActionResultName:   string;
    ValidationMessages: any[];
}

export interface Expression {
    Operation:         number | null;
    DateField:         null;
    Source:            DefaultValue | null;
    AdditionalSources: null;
    DateWhere:         null;
}

export interface Control {
    Type:                    string;
    displayTag?:             string;
    formatRounding?:         string;
    formatSeparator?:        string;
    formatType?:             string;
    hrefFormat?:             string;
    icon?:                   string;
    iconAlign?:              string;
    isUsingNoWrap?:          boolean;
    showCurrency?:           boolean;
    allowUnsafeScripts?:     boolean;
    id:                      string;
    name:                    string;
    isV4Control:             boolean;
    TypeOverride:            string;
    isBound:                 boolean;
    IsComplexType:           boolean;
    FieldType:               number;
    value:                   null | string;
    caption:                 string;
    classes:                 string;
    hideCaption:             boolean;
    isOutputOnly:            boolean;
    regularCaption:          boolean;
    width:                   string;
    widthType:               string;
    visible:                 boolean;
    disabled:                boolean;
    defaultValue:            string;
    onBlur:                  null;
    onChange:                null;
    onClick:                 null | string;
    onFocus:                 null;
    validationRules:         null;
    validationError:         null;
    fixedClasses?:           string;
    hasHeader?:              boolean;
    isCollapsed?:            boolean;
    isCollapsible?:          boolean;
    responsiveClasses?:      string;
    filterDef?:              FilterDef[];
    hideAdvSearch?:          boolean;
    hideColumnHeaders?:      boolean;
    hideNavigation?:         boolean;
    hideSearch?:             boolean;
    hideSettings?:           boolean;
    hidePerPageSelector?:    boolean;
    hideExport?:             boolean;
    hideMailChimp?:          boolean;
    hideViewsDropdown?:      boolean;
    hideGoToPage?:           boolean;
    isFixedLayout?:          boolean;
    isResponsive?:           boolean;
    model?:                  Model;
    onActiveRowChange?:      null | string;
    onLoad?:                 null;
    prevPaging?:             null;
    prevSorting?:            null;
    enableSorting?:          boolean;
    Class?:                  string;
    columnTotals?:           any[];
    viewList?:               ViewList[];
    viewFriendlyName?:       string;
    defaultViewFilter?:      string;
    columns?:                ControlColumn[];
    isSearchable?:           boolean;
    isSelectable?:           boolean;
    hideViewSelector?:       boolean;
    showDividers?:           boolean;
    hasZebraStripes?:        boolean;
    addLabel?:               string;
    isReadOnly?:             boolean;
    canAddMoreRows?:         boolean;
    newRowsCount?:           number;
    showDeleteColumn?:       boolean;
    showDeleteConfirmation?: boolean;
    showGoToPage?:           boolean;
    paging?:                 Paging;
    showExport?:             boolean;
    showSort?:               boolean;
    showRefresh?:            boolean;
    canReorderColumns?:      boolean;
    canReorderRows?:         boolean;
    viewFilter?:             string;
    sorting?:                null;
    selectionInfo?:          SelectionInfo;
    searchString?:           null;
    searchFilter?:           null;
    dataSource?:             any[];
    actionButtonLabel?:      null;
    onActionButtonClick?:    null;
    newRow?:                 null;
    dataModelId?:            null;
    projections?:            null;
}

export interface ControlColumn {
    controlId:        string;
    header:           string;
    field:            string;
    fieldType:        number;
    columnType:       number;
    onChangeEvent:    null;
    defaultValue:     DefaultValue;
    readOnly:         boolean;
    canDelete:        boolean;
    isLocked:         boolean;
    cardColumnFields: null;
    showOnMobile:     boolean;
    format:           PurpleFormat;
    validationRules:  ValidationRule[];
    control:          null;
    expression:       null;
    hasColumnTotal:   boolean;
    displayField:     string;
}

export interface PurpleFormat {
    width:           string;
    widthFixed:      null;
    alignment:       string;
    type:            null;
    rounding:        null;
    separator:       null | string;
    decimalPoint:    null;
    thousands:       null;
    money:           null;
    dateType:        null;
    headerAlignment: null;
    fontSize:        null;
    textColor:       null;
    backgroundColor: null;
    visible:         boolean;
    disabled:        boolean;
}

export interface ValidationRule {
    rule:      number;
    value:     null;
    canDelete: boolean;
}

export interface FilterDef {
    filterId:       string;
    filterName:     string;
    viewName:       string;
    versionId:      string;
    searchString:   null;
    isDefault:      boolean;
    isHidden:       boolean;
    state:          number;
    expression:     Expression[];
    sorting:        Sorting[];
    hidden:         any[];
    visibleColumns: null;
}

export interface Sorting {
    filterField: DropdownFieldName;
    filterOrder: string;
}

export enum DropdownFieldName {
    FullName = "FullName",
    LeadTimeUOM = "LeadTimeUOM",
    Name = "Name",
}

export interface Model {
    isAttached:            boolean;
    isSearchable:          boolean;
    isSelectable:          boolean;
    isEditable:            boolean;
    lastSelectedRecordId:  number;
    customViews:           null;
    sharedViews:           null;
    columnTotals:          null;
    searchString:          string;
    searchColumns:         string[];
    searchFilter:          null;
    searchMetadataColumns: any[];
    data:                  null;
    dataSource:            any[];
    unselectedRecords:     null;
    caption:               null;
    isAction:              boolean;
    isDefaultLoaded:       boolean;
    isCustomViewDefault:   boolean;
    viewName:              string;
    viewFilter:            FilterDef;
    distinct:              boolean;
    columns:               ModelColumn[];
    sorting:               null;
    paging:                Paging;
    selectAll:             boolean;
    selectedRecords:       any[];
}

export interface ModelColumn {
    name:                             string;
    caption:                          string;
    isKey:                            boolean;
    columnType:                       number;
    width:                            number;
    format:                           FluffyFormat;
    cardColumnFields:                 null;
    hasSubtotal:                      boolean;
    subtotal:                         number;
    ignore:                           boolean;
    isLinked:                         boolean;
    tableNameRef:                     null;
    IsRequired:                       boolean;
    IsUnique:                         boolean;
    Size:                             number;
    Id:                               number;
    LinkedFieldCaption:               null;
    LinkedJoinFromTable:              null;
    LinkedJoinFromPrimary:            null;
    LinkedViaField:                   null;
    CompareName:                      null;
    DisplayValueFromTableName:        null;
    DisplayValueFromFieldName:        null;
    DisplayValueFromViewFriendlyName: null;
    MaxSize:                          number;
    IsComplexField:                   boolean;
    ParentFieldName:                  null;
    ParentFieldType:                  null;
    ElementType:                      null;
    ElementSeq:                       null;
    Elements:                         null;
    fieldType:                        number;
    onClick:                          null;
    expression:                       any[];
    aggregate:                        null;
    dateGroupBy:                      null;
    validationRules:                  null;
}

export interface FluffyFormat {
    display:         number;
    visible:         boolean;
    width:           Width;
    icon:            Icon;
    visiblemobile:   boolean;
    alignment:       string;
    formatType:      string;
    formatRounding:  null | string;
    formatSeparator: null | string;
    hidecaption:     boolean;
}

export interface Icon {
    name:  null | string;
    color: null | string;
}

export interface Width {
    value:  null | string;
    type:   number;
    mvalue: null | string;
    mtype:  number;
}

export interface Paging {
    pageNumber: number;
    pageSize:   number;
    totalRows:  number;
}

export interface SelectionInfo {
    allExcept: boolean;
    recordIDs: any[];
}

export interface ViewList {
    name:               string;
    id:                 string;
    columns:            ViewListColumn[];
    sorting:            any[];
    filtering:          any[];
    enableDynamicDates: boolean;
}

export interface ViewListColumn {
    field:   string;
    visible: boolean;
}

export interface Field {
    AccVersion:                null;
    caption:                   string;
    dropdown_fieldName:        DropdownFieldName | null;
    dropdown_viewNameFriendly: null | string;
    isOutputOnly:              boolean;
    isRequired:                boolean;
    maxSize:                   number;
    name:                      string;
    type:                      number;
}

export interface Layout {
    Id:               string;
    Type:             string;
    LegacyClass:      null;
    LegacyDataWidth:  null;
    LegacyDataHeight: null;
    TypeOverride:     null;
    LegacyChildClass: null;
    Content:          LayoutContent[];
}

export interface LayoutContent {
    Id:               string;
    Type:             string;
    LegacyClass:      string;
    LegacyDataWidth:  null;
    LegacyDataHeight: null;
    TypeOverride:     null;
    LegacyChildClass: string;
    Content:          ContentContent[];
}

export interface ContentContent {
    Id:               string;
    Type:             string;
    LegacyClass:      null | string;
    LegacyDataWidth:  null | string;
    LegacyDataHeight: null | string;
    TypeOverride:     null | string;
    LegacyChildClass: null;
    Content:          ContentContent[] | null;
}

export interface VersionList {
    "3055ed30-7514-42c5-9595-190c84c95076": string;
    "81fb70d3-e23d-4e06-93ae-967fd1d873bc": string;
}
